[{"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FloatingMessage.js":"1","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\MainPage.js":"2","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\TopMenu.js":"3","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\Settings.js":"4","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\index.js":"5","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\ContentWrapper.js":"6","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FloatingImages.js":"7","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\SideMenu.js":"8","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FilesContainer.js":"9","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\ImagesSettings.js":"10","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\MenuOption.js":"11"},{"size":844,"mtime":1610203817901,"results":"12","hashOfConfig":"13"},{"size":5610,"mtime":1610571026880,"results":"14","hashOfConfig":"13"},{"size":2088,"mtime":1610203837341,"results":"15","hashOfConfig":"13"},{"size":2248,"mtime":1610556339183,"results":"16","hashOfConfig":"13"},{"size":3579,"mtime":1610571136392,"results":"17","hashOfConfig":"13"},{"size":618,"mtime":1610203805903,"results":"18","hashOfConfig":"13"},{"size":1751,"mtime":1610203813320,"results":"19","hashOfConfig":"13"},{"size":1158,"mtime":1610203835440,"results":"20","hashOfConfig":"13"},{"size":4824,"mtime":1610571040629,"results":"21","hashOfConfig":"13"},{"size":3101,"mtime":1610203821327,"results":"22","hashOfConfig":"13"},{"size":849,"mtime":1610203828785,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1n3mdsf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FloatingMessage.js",[],["54","55"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\MainPage.js",["56"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\TopMenu.js",[],["57","58"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\Settings.js",[],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\index.js",["59"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\ContentWrapper.js",["60","61"],"import React, { Component } from 'react'\r\n\r\nimport \"../App.css\"\r\nimport \"../specy.css\"\r\nclass ContentWrapper extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\r\n\t//=======================================================//\r\n\trender() {\r\n\t\tlet s = this.props.settings\r\n\t\treturn (\r\n\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t{this.props.children.map((page, i) => {\r\n\t\t\t\t\tlet isHidden = !(i === this.props.selectedPage)\r\n\t\t\t\t\treturn <div style={isHidden ? { display: \"none\" } : {}} className=\"contentWrapper\" key={i}>\r\n\t\t\t\t\t\t{page}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ContentWrapper",["62","63"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FloatingImages.js",["64","65","66"],"import React, { Component } from 'react'\r\nimport \"../App.css\"\r\nimport { Close } from \"@material-ui/icons\"\r\nclass FloatingImages extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    preventDefault = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n    //=======================================================//\r\n    render() {\r\n        let shown = this.props.toggled ? \"flex\" : \"none\"\r\n\r\n        let isHorizontal = this.props.data.format < 1.5\r\n\r\n        let orientation = {\r\n            width: isHorizontal ? \"calc(35vw - 1.5rem)\" : \"unset\",\r\n            height: isHorizontal ? \"unset\" : \"calc(91vh - 2rem)\"\r\n        }\r\n        return (\r\n            <div\r\n                className=\"floatingImages\"\r\n                style={{ display: shown }}\r\n                onClick={this.props.toggle}\r\n            >\r\n                <Close\r\n                    className=\"closeBtn\"\r\n                    style={{ fontSize: 45 }}\r\n                    onClick={this.props.toggle}\r\n                />\r\n                <div\r\n                    className=\"imagesContainer\"\r\n                    onClick={this.preventDefault}\r\n                >\r\n                    <div className=\"textAndImage\">\r\n                        <div className=\"floatingImgText\">Original</div>\r\n                        <img src={this.props.data.original} style={orientation} />\r\n                    </div>\r\n                    <div className=\"textAndImage\">\r\n                        <div className=\"floatingImgText\">Modified</div>\r\n                        <img src={this.props.data.modified} style={orientation} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FloatingImages","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\SideMenu.js",["67"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FilesContainer.js",["68","69"],"import React, { Component } from 'react'\r\nimport \"../App.css\"\r\nimport { DeleteForever, Visibility, Info } from \"@material-ui/icons\"\r\nclass FileContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    sendImagesData = () => {\r\n        let data = {\r\n            original: this.props.data.src,\r\n            modified: this.props.data.updatedImg,\r\n            format: this.props.data.height / this.props.data.width,\r\n            hasImages: true\r\n        }\r\n        this.props.toggleFloatingImages(data)\r\n    }\r\n    handleChange = (e) => {\r\n        let el = e.target\r\n        this.props.individualChange(el.value, el.name, this.props.data.id)\r\n    }\r\n    showInfo = (e) => {\r\n        window.showMessage(this.props.data.message,1,10000,() =>{\r\n            console.log(\"clicked\")\r\n        })\r\n    }\r\n    //=======================================================//\r\n    render() {\r\n        let data = this.props.data\r\n        let s = this.props.settings\r\n        let color = s.darkMode === \"on\" ? \"rgb(27, 25, 35)\" : \"rgb(238, 238, 238)\"\r\n        let visible = { visibility: \"hidden\" }\r\n        let visible2 = {visibility: \"hidden\"}\r\n        if (data.status === \"done\") {\r\n            visible2.visibility = \"visible\"\r\n            if (data.success) {\r\n                color = s.darkMode === \"on\" ? \"rgb(75 153 75)\" : \"rgb(200, 239, 200)\"\r\n                visible.visibility = \"visible\"\r\n            } else {\r\n                color = s.darkMode === \"on\" ? \"rgb(144 74 74)\" : \"#e3b0b0\"\r\n            }\r\n        } else if (data.status === \"pending\") {\r\n            color = s.darkMode === \"on\" ? \"#d6c869\" : \"#f7f1cb\"\r\n        }\r\n        return (\r\n            <div\r\n                className={s.darkMode === \"on\" ? \"fileRow\" : \"fileRow text-dark\"}\r\n                style={{ backgroundColor: color }}>\r\n                <div className=\"row\">\r\n                    <div style={{ position: \"relative\" }}>\r\n                        <img src={data.src} className=\"previewImage\" />\r\n                        <div className=\"fileName\">\r\n                            {data.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dataCol\">\r\n                        <div>{data.prettySize}</div>\r\n                        <div>\r\n                            {data.width}x{data.height}\r\n                            {\" âž¤ \"}\r\n                            {Math.floor(data.width * data.scale)}x\r\n                            {Math.floor(data.height * data.scale)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flex centerX centerY\">\r\n                    {data.name.includes(\".gif\") ? \r\n                        <div className=\"column centerY\" style={{ marginRight: \"0.5rem\" }}>\r\n                            <div style={{ marginTop: \"-1.2rem\" }}>Frames</div>\r\n                            <input\r\n                                type=\"number\"\r\n                                className={\"individualInput\"}\r\n                                step=\"1\"\r\n                                name=\"fps\"\r\n                                onChange={this.handleChange}\r\n                                value={data.fps}\r\n                            />\r\n                        </div> \r\n                        : \"\"\r\n                    }\r\n                    <div className=\"column centerY\" style={{ marginRight: \"0.5rem\" }}>\r\n                        <div style={{ marginTop: \"-1.2rem\" }}>Scale</div>\r\n                        <input\r\n                            type=\"number\"\r\n                            className={\"individualInput\"}\r\n                            step=\"0.05\"\r\n                            name=\"scale\"\r\n                            onChange={this.handleChange}\r\n                            value={data.scale}\r\n                        />\r\n                    </div>\r\n                    <Info\r\n                        className={s.darkMode === \"on\" ? \"text-white highlightHover\" : \"text-dark highlightHover\"}\r\n                        style={{ fontSize: 25, ...visible2 }}\r\n                        onClick={this.showInfo}\r\n                    />\r\n                    <Visibility\r\n                        className={s.darkMode === \"on\" ? \"text-white highlightHover\" : \"text-dark highlightHover\"}\r\n                        style={{ fontSize: 25, ...visible }}\r\n                        onClick={this.sendImagesData}\r\n                    />\r\n                    <DeleteForever\r\n                        onClick={() => this.props.action(data.id)}\r\n                        className={s.darkMode === \"on\" ? \"text-white redHover\" : \"text-dark redHover\"}\r\n                        style={{ fontSize: 25 }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileContainer","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\ImagesSettings.js",["70"],"import React, { Component } from 'react'\r\nclass ImagesSettings extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.props.action(event.target.value, event.target.name)\r\n    }\r\n    openFolder = () => {\r\n        window.ipcRenderer.send(\"open-folder\")\r\n    }\r\n    //=======================================================//\r\n    render() {\r\n        let data = this.props.data\r\n        let s = this.props.settings\r\n        return (\r\n\r\n            <div className={s.darkMode === \"on\" ? \"sideSettings dm-L2\" : \"sideSettings l1 box-shadow\"}>\r\n                <div className=\"innerSideSettings\">\r\n                    <div className=\"column\">\r\n                        <div>Scale</div>\r\n                        <input\r\n                            type=\"number\"\r\n                            step=\"0.05\"\r\n                            value={data.scale}\r\n                            className=\"input wm-L2\"\r\n                            name=\"scale\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div>Denoise level</div>\r\n                        <select\r\n                            className=\"input wm-L2\"\r\n                            value={data.denoiseLevel}\r\n                            name=\"denoiseLevel\"\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <option>None</option>\r\n                            <option>Low</option>\r\n                            <option>Medium</option>\r\n                            <option>High</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div>Output format</div>\r\n                        <select\r\n                            className=\"input wm-L2\"\r\n                            value={data.outputFormat}\r\n                            name=\"outputFormat\"\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <option>Original</option>\r\n                            <option>.png</option>\r\n                            <option>.jpg</option>\r\n                            <option>.webp</option>\r\n                        </select>\r\n                    </div>\r\n                    <button\r\n                        style={{ margin: 0, marginTop: \"auto\" }}\r\n                        className=\"button fillY outputFolder\"\r\n                        onClick={this.openFolder}\r\n                    >\r\n                        Open output folder\r\n                    </button>\r\n                    <button\r\n                        className=\"button fillY darkTeal\"\r\n                        style={{ marginTop: \"0.5rem\" }}\r\n                        onClick={this.props.executeWaifu}\r\n                    >\r\n                        Run all\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImagesSettings","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\MenuOption.js",["71"],"import React, { Component } from 'react'\r\nimport \"../App.css\"\r\nlet st = {\r\n    wrapper: {\r\n        borderRadius: \"0.5rem\",\r\n        width: \"55px\",\r\n        height: \"55px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: \"1rem\"\r\n    }\r\n\r\n}\r\nclass MenuOption extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    //=======================================================//\r\n\r\n    render() {\r\n        let s = this.props.settings\r\n        return (\r\n            <div\r\n                style={st.wrapper}\r\n                className={s.darkMode === \"on\" ? \"dm-L1\" : \"dm-L2\"}\r\n                onClick={() => this.props.action(this.props.index)}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuOption",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":11,"column":5,"nodeType":"78","endLine":11,"endColumn":7,"suggestions":"79"},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":55,"column":9,"nodeType":"84","messageId":"85","endLine":55,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":6,"column":2,"nodeType":"88","messageId":"89","endLine":8,"endColumn":3},{"ruleId":"82","severity":1,"message":"90","line":12,"column":7,"nodeType":"84","messageId":"85","endLine":12,"endColumn":8},{"ruleId":"72","replacedBy":"91"},{"ruleId":"74","replacedBy":"92"},{"ruleId":"86","severity":1,"message":"87","line":5,"column":5,"nodeType":"88","messageId":"89","endLine":7,"endColumn":6},{"ruleId":"93","severity":1,"message":"94","line":39,"column":25,"nodeType":"95","endLine":39,"endColumn":83},{"ruleId":"93","severity":1,"message":"94","line":43,"column":25,"nodeType":"95","endLine":43,"endColumn":83},{"ruleId":"86","severity":1,"message":"87","line":17,"column":5,"nodeType":"88","messageId":"89","endLine":19,"endColumn":6},{"ruleId":"86","severity":1,"message":"87","line":5,"column":5,"nodeType":"88","messageId":"89","endLine":7,"endColumn":6},{"ruleId":"93","severity":1,"message":"94","line":50,"column":25,"nodeType":"95","endLine":50,"endColumn":72},{"ruleId":"86","severity":1,"message":"87","line":3,"column":5,"nodeType":"88","messageId":"89","endLine":6,"endColumn":6},{"ruleId":"86","severity":1,"message":"87","line":16,"column":5,"nodeType":"88","messageId":"89","endLine":18,"endColumn":6},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["98"],["96"],["97"],"no-unused-vars","'tmout' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'s' is assigned a value but never used.",["96"],["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [props]",{"range":"101","text":"102"},[387,389],"[props]"]