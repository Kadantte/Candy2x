[{"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\Settings.js":"1","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\MainPage.js":"2","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FilesContainer.js":"3","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\index.js":"4","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\TopMenu.js":"5","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\MenuOption.js":"6","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\ImagesSettings.js":"7","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FloatingImages.js":"8","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\SideMenu.js":"9","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FloatingMessage.js":"10","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\ContentWrapper.js":"11"},{"size":2849,"mtime":1611749829053,"results":"12","hashOfConfig":"13"},{"size":7780,"mtime":1611750653390,"results":"14","hashOfConfig":"13"},{"size":6245,"mtime":1611513894126,"results":"15","hashOfConfig":"13"},{"size":3829,"mtime":1611751405161,"results":"16","hashOfConfig":"13"},{"size":2088,"mtime":1610203837341,"results":"17","hashOfConfig":"13"},{"size":849,"mtime":1610203828785,"results":"18","hashOfConfig":"13"},{"size":4129,"mtime":1611747979440,"results":"19","hashOfConfig":"13"},{"size":2556,"mtime":1611751318038,"results":"20","hashOfConfig":"13"},{"size":1158,"mtime":1610203835440,"results":"21","hashOfConfig":"13"},{"size":844,"mtime":1610203817901,"results":"22","hashOfConfig":"13"},{"size":618,"mtime":1610203805903,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n3mdsf",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\Settings.js",[],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\MainPage.js",["54"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FilesContainer.js",["55","56"],"import React, { Component } from 'react'\r\nimport \"../App.css\"\r\nimport { DeleteForever, Visibility, Info } from \"@material-ui/icons\"\r\nclass FileContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    sendImagesData = () => {\r\n        let propsData = this.props.data\r\n        let data = {\r\n            original: propsData.src,\r\n            modified: propsData.updatedImg,\r\n            format: propsData.height / propsData.width,\r\n            hasImages: true,\r\n            isVideo: false\r\n        }\r\n\r\n        if(propsData.isVideo){\r\n            data.video = propsData.video\r\n            data.isVideo = true\r\n        }\r\n        this.props.toggleFloatingImages(data)\r\n    }\r\n    handleChange = (e) => {\r\n        let el = e.target\r\n        this.props.individualChange(el.value, el.name, this.props.data.id)\r\n    }\r\n    showInfo = (e) => {\r\n        window.showMessage(this.props.data.message, 1, 10000, () => {\r\n            console.log(\"clicked\")\r\n        })\r\n    }\r\n    //=======================================================//\r\n    render() {\r\n        let data = this.props.data\r\n        let s = this.props.settings\r\n        let color = s.darkMode === \"on\" ? \"rgb(27, 25, 35)\" : \"rgb(238, 238, 238)\"\r\n        let visible = { visibility: \"hidden\" }\r\n        let visible2 = { visibility: \"hidden\" }\r\n        let visible3 = { visibility: \"visible\" }\r\n        if (!this.props.canRun) visible3.visibility = \"hidden\"\r\n        if (data.status === \"done\") {\r\n            visible2.visibility = \"visible\"\r\n            if (data.success) {\r\n                color = s.darkMode === \"on\" ? \"rgb(75 153 75)\" : \"rgb(200, 239, 200)\"\r\n                visible.visibility = \"visible\"\r\n            } else {\r\n                color = s.darkMode === \"on\" ? \"rgb(144 74 74)\" : \"#e3b0b0\"\r\n            }\r\n        } else if (data.status === \"pending\" || data.status === \"processing\") {\r\n            color = s.darkMode === \"on\" ? \"#d6c869\" : \"#f7f1cb\"\r\n        }\r\n        let progressBar = data.frames[0] / data.frames[1] * 95 + \"%\"\r\n        if (data.status === \"done\") progressBar = \"100%\"\r\n        return (\r\n            <div\r\n                className={s.darkMode === \"on\" ? \"fileRow\" : \"fileRow text-dark\"}\r\n                style={{ backgroundColor: color }}>\r\n                <div className=\"row\">\r\n                    <div style={{ position: \"relative\" }}>\r\n                        {data.isVideo ? \r\n                          data.video\r\n                        : <img src={data.src} className=\"previewImage\" />\r\n                        }\r\n                        <div className=\"fileName\">\r\n                            {data.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dataCol\">\r\n                        <div>{data.prettySize}</div>\r\n                        <div>\r\n                            {data.width}x{data.height}\r\n                            {\" âž¤ \"}\r\n                            {Math.floor(data.width * data.scale)}x\r\n                            {Math.floor(data.height * data.scale)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"progressWrapper\"\r\n                    style={{ visibility: data.frames[1] === 0 || data.status === \"done\" ? \"hidden\" : \"visible\" }}\r\n                >\r\n                    <div>\r\n                        {data.frames[0] === data.frames[1]\r\n                            ? \"Encoding...\"\r\n                            : \"Upscaling frame: \" + data.frames[0] + \"/\" + data.frames[1]\r\n                        }\r\n                    </div>\r\n                    <div className=\"progressOuter\">\r\n                        <div\r\n                            className=\"progressInner\"\r\n                            style={{ width: progressBar }}\r\n                        >\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex centerX centerY\">\r\n                    {data.name.includes(\".gif\") ?\r\n                        <div className=\"column centerY\" style={{ marginRight: \"0.5rem\" }}>\r\n                            <div style={{ marginTop: \"-1.2rem\" }}>Speed</div>\r\n                            <input\r\n                                type=\"number\"\r\n                                className={\"individualInput\"}\r\n                                step=\"0.1\"\r\n                                name=\"speed\"\r\n                                onChange={this.handleChange}\r\n                                value={data.speed}\r\n                            />\r\n                        </div>\r\n                        : \"\"\r\n                    }\r\n                    <div className=\"column centerY\" style={{ marginRight: \"0.5rem\" }}>\r\n                        <div style={{ marginTop: \"-1.2rem\" }}>Scale</div>\r\n                        <input\r\n                            type=\"number\"\r\n                            className={\"individualInput\"}\r\n                            step=\"0.05\"\r\n                            name=\"scale\"\r\n                            onChange={this.handleChange}\r\n                            value={data.scale}\r\n                        />\r\n                    </div>\r\n                    <Info\r\n                        className={s.darkMode === \"on\" ? \"text-white highlightHover\" : \"text-dark highlightHover\"}\r\n                        style={{ fontSize: 25, ...visible2 }}\r\n                        onClick={this.showInfo}\r\n                    />\r\n                    <Visibility\r\n                        className={s.darkMode === \"on\" ? \"text-white highlightHover\" : \"text-dark highlightHover\"}\r\n                        style={{ fontSize: 25, ...visible }}\r\n                        onClick={this.sendImagesData}\r\n                    />\r\n                    <DeleteForever\r\n                        onClick={() => {\r\n                            this.props.action(data.id)\r\n                        }}\r\n\r\n                        className={s.darkMode === \"on\" ? \"text-white redHover\" : \"text-dark redHover\"}\r\n                        style={{ fontSize: 25, ...visible3 }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileContainer",["57","58"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\index.js",[],["59","60"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\TopMenu.js",[],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\MenuOption.js",["61"],"import React, { Component } from 'react'\r\nimport \"../App.css\"\r\nlet st = {\r\n    wrapper: {\r\n        borderRadius: \"0.5rem\",\r\n        width: \"55px\",\r\n        height: \"55px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: \"1rem\"\r\n    }\r\n\r\n}\r\nclass MenuOption extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    //=======================================================//\r\n\r\n    render() {\r\n        let s = this.props.settings\r\n        return (\r\n            <div\r\n                style={st.wrapper}\r\n                className={s.darkMode === \"on\" ? \"dm-L1\" : \"dm-L2\"}\r\n                onClick={() => this.props.action(this.props.index)}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuOption","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\ImagesSettings.js",[],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FloatingImages.js",["62","63","64"],"import React, { Component } from 'react'\r\nimport \"../App.css\"\r\nimport { Close } from \"@material-ui/icons\"\r\nclass FloatingImages extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    preventDefault = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n    //=======================================================//\r\n    render() {\r\n        let shown = this.props.toggled ? \"flex\" : \"none\"\r\n        let data = this.props.data\r\n        let isHorizontal = this.props.data.format < 1.5\r\n        let orientation = {}\r\n        let videoClass = data.isVideo ? \"verticalVideo\" : \"\"\r\n        if (isHorizontal) {\r\n            videoClass = data.isVideo ? \"horizontalVideo\" : \"\"\r\n        }\r\n        orientation = {\r\n            width: isHorizontal ? \"calc(35vw - 1.5rem)\" : \"unset\",\r\n            height: isHorizontal ? \"unset\" : \"calc(91vh - 2rem)\"\r\n        }\r\n        let textAndImageClass = \"textAndImage \" + videoClass\r\n        return (\r\n            <div\r\n                className=\"floatingImages\"\r\n                style={{ display: shown }}\r\n                onClick={this.props.toggle}\r\n            >\r\n                <Close\r\n                    className=\"closeBtn\"\r\n                    style={{ fontSize: 45 }}\r\n                    onClick={this.props.toggle}\r\n                />\r\n                <div\r\n                    className=\"imagesContainer\"\r\n                    onClick={this.preventDefault}\r\n                >\r\n                    <div className={textAndImageClass}>\r\n                        <div className=\"floatingImgText\">Original</div>\r\n                        {data.isVideo\r\n                            ? data.video\r\n                            : <img src={data.original} style={orientation} />\r\n                        }\r\n                    </div>\r\n                    <div className={textAndImageClass}>\r\n                        <div className=\"floatingImgText\">Modified</div>\r\n                        {data.isVideo\r\n                            ? <video\r\n                                autoPlay\r\n                                muted={true}\r\n                                loop={true}\r\n                            >\r\n                                <source src={data.modified}>\r\n                                </source>\r\n                            </video>\r\n                            : <img src={data.modified} style={orientation} />\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FloatingImages","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\SideMenu.js",["65"],"import React, { Component } from 'react'\r\nimport MenuOption from \"./MenuOption\"\r\nimport { HomeRounded, Settings } from \"@material-ui/icons\"\r\nimport \"../App.css\"\r\nimport \"../specy.css\"\r\nlet st = {\r\n    selected: {\r\n        fontSize: 40,\r\n        color: \"white\"\r\n    },\r\n    disabled: {\r\n        fontSize: 40,\r\n        color: \"#7e7e7e\"\r\n    }\r\n}\r\nclass SideMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    //=======================================================//\r\n    render() {\r\n        let sel = this.props.selectedIndex\r\n        let s = this.props.settings\r\n        return (\r\n            <div className={s.darkMode === \"on\" ? \"sideMenu dm-L2\" : \"sideMenu dm-L1\"}>\r\n                <MenuOption index={0} action={this.props.action} settings={s}>\r\n                    <HomeRounded style={sel === 0 ? st.selected : st.disabled} />\r\n                </MenuOption>\r\n                <MenuOption index={1} action={this.props.action} settings={s}>\r\n                    <Settings style={sel === 1 ? st.selected : st.disabled} />\r\n                </MenuOption>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideMenu","C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\FloatingMessage.js",[],["66","67"],"C:\\Users\\dione\\Desktop\\Progetti\\electron\\scapix\\src\\Components\\ContentWrapper.js",["68","69"],"import React, { Component } from 'react'\r\n\r\nimport \"../App.css\"\r\nimport \"../specy.css\"\r\nclass ContentWrapper extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\r\n\t//=======================================================//\r\n\trender() {\r\n\t\tlet s = this.props.settings\r\n\t\treturn (\r\n\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t{this.props.children.map((page, i) => {\r\n\t\t\t\t\tlet isHidden = !(i === this.props.selectedPage)\r\n\t\t\t\t\treturn <div style={isHidden ? { display: \"none\" } : {}} className=\"contentWrapper\" key={i}>\r\n\t\t\t\t\t\t{page}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ContentWrapper",{"ruleId":"70","severity":1,"message":"71","line":12,"column":5,"nodeType":"72","endLine":12,"endColumn":7,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":5,"column":5,"nodeType":"76","messageId":"77","endLine":7,"endColumn":6},{"ruleId":"78","severity":1,"message":"79","line":63,"column":27,"nodeType":"80","endLine":63,"endColumn":74},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"74","severity":1,"message":"75","line":16,"column":5,"nodeType":"76","messageId":"77","endLine":18,"endColumn":6},{"ruleId":"74","severity":1,"message":"75","line":5,"column":5,"nodeType":"76","messageId":"77","endLine":7,"endColumn":6},{"ruleId":"78","severity":1,"message":"79","line":46,"column":31,"nodeType":"80","endLine":46,"endColumn":78},{"ruleId":"78","severity":1,"message":"79","line":60,"column":31,"nodeType":"80","endLine":60,"endColumn":78},{"ruleId":"74","severity":1,"message":"75","line":17,"column":5,"nodeType":"76","messageId":"77","endLine":19,"endColumn":6},{"ruleId":"81","replacedBy":"87"},{"ruleId":"83","replacedBy":"88"},{"ruleId":"74","severity":1,"message":"75","line":6,"column":2,"nodeType":"76","messageId":"77","endLine":8,"endColumn":3},{"ruleId":"89","severity":1,"message":"90","line":12,"column":7,"nodeType":"91","messageId":"92","endLine":12,"endColumn":8},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["93"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],["94"],["95"],"no-unused-vars","'s' is assigned a value but never used.","Identifier","unusedVar",{"desc":"96","fix":"97"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props]",{"range":"98","text":"99"},[424,426],"[props]"]